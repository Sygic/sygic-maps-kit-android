import com.android.build.OutputFile

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion androidCompileSdkVersion

    defaultConfig {
        applicationId "com.sygic.samples"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargerSdkVersion
        versionCode 1
        versionName "1.0"

        gradle.resolveFlavors(it)

        manifestPlaceholders = [sygicApiKey: gradle.getSdkKey()]
    }

    buildTypes {
        all {
            buildConfigField "String", "GITHUB_REPO", '"https://github.com/Sygic/sygic-maps-kit-android/"'
            buildConfigField "String", "GITHUB_WIKI", '"https://github.com/Sygic/sygic-maps-kit-android/wiki/"'
            buildConfigField "String", "STACK_OVERFLOW", '"https://stackoverflow.com/questions/tagged/android+sygic"'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'sample-browsemap-def/src/main/java'
        main.res.srcDirs += 'sample-browsemap-def/src/main/res'

        main.java.srcDirs += 'sample-browsemap-full/src/main/java'
        main.res.srcDirs += 'sample-browsemap-full/src/main/res'

        main.java.srcDirs += 'sample-browsemap-modes/src/main/java'
        main.res.srcDirs += 'sample-browsemap-modes/src/main/res'

        main.java.srcDirs += 'sample-browsemap-click-listener/src/main/java'
        main.res.srcDirs += 'sample-browsemap-click-listener/src/main/res'

        main.java.srcDirs += 'sample-browsemap-markers/src/main/java'
        main.res.srcDirs += 'sample-browsemap-markers/src/main/res'

        main.java.srcDirs += 'sample-browsemap-themes/src/main/java'
        main.res.srcDirs += 'sample-browsemap-themes/src/main/res'

        main.java.srcDirs += 'sample-browsemap-details-window/src/main/java'
        main.res.srcDirs += 'sample-browsemap-details-window/src/main/res'
    }

    /* -= APK Split =- */
    def abiCodes = ['x86':1, 'x86_64':2, 'armeabi-v7a':3, 'arm64-v8a':4]
    android.applicationVariants.all { variant ->
        variant.outputs.each {
            output ->
                def abiName = output.getFilter(OutputFile.ABI)
                output.versionCodeOverride = abiCodes.get(abiName, 0) * 100000 + variant.versionCode
        }
    }
    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            universalApk false
        }
    }
    /* -= APK Split =- */

    //todo: MS-4504
    dataBinding {
        enabled = true
    }

    //todo: MS-4504
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // modules
    implementation project(':modules-browsemap')
    implementation project(':app-samples-common')

    // libraries
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    // test libraries

}
